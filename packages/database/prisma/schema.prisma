datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

model User {
  id                 String           @id @default(uuid())
  email              String           @unique
  name               String
  passwordHash       String
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  lastActiveTenantId String?
  tenantRoles        UserTenantRole[]
}

model Tenant {
  id           String           @id @default(uuid())
  name         String
  createdAt    DateTime         @default(now())
  users        UserTenantRole[]
  workflows    Workflow[]
  integrations Integration[]
  invites      Invite[]
}

model UserTenantRole {
  userId    String
  tenantId  String
  role      Role
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  tenant    Tenant   @relation(fields: [tenantId], references: [id])

  @@id([userId, tenantId])
}

enum Role {
  ADMIN
  EDITOR
  VIEWER
}

model Workflow {
  id          String              @id @default(uuid())
  tenantId    String
  name        String
  description String?
  definition  Json
  isActive    Boolean             @default(true)
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  tenant      Tenant              @relation(fields: [tenantId], references: [id])
  executions  WorkflowExecution[]
  triggers    Trigger[]
}

model WorkflowExecution {
  id          String          @id @default(uuid())
  workflowId  String
  status      ExecutionStatus
  triggerType TriggerType
  startedAt   DateTime        @default(now())
  finishedAt  DateTime?
  logs        Json?
  workflow    Workflow        @relation(fields: [workflowId], references: [id])
}

enum ExecutionStatus {
  PENDING
  RUNNING
  FAILED
  SUCCESS
}

enum TriggerType {
  MANUAL
  SCHEDULE
  WEBHOOK
}

model Trigger {
  id            String      @id @default(uuid())
  workflowId    String
  type          TriggerType
  cronExpr      String?
  webhookSecret String?
  isActive      Boolean     @default(true)
  workflow      Workflow    @relation(fields: [workflowId], references: [id])
}

model Integration {
  id        String          @id @default(uuid())
  tenantId  String
  type      IntegrationType
  config    Json
  createdAt DateTime        @default(now())
  tenant    Tenant          @relation(fields: [tenantId], references: [id])
}

model Invite {
  id        String   @id @default(uuid())
  tenantId  String
  email     String
  role      Role
  token     String   @unique
  accepted  Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
}

enum IntegrationType {
  SLACK
  EMAIL
  HTTP
  GITHUB
  SHEETS
}
